version: 2
jobs:
  api-test:
    docker:
      - image: circleci/node:8.11.1
    working_directory: ~/project/3/api/api
    steps: 
      - checkout:
          path: ~/project/
      - restore_cache:
          keys:
            - api-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: api-dependencies-{{ checksum "package.json" }}
      - run: npm test
  chess-test:
    docker:
      - image: circleci/node:8.11.1
    working_directory: ~/project/3/chess/chess
    steps: 
      - checkout:
          path: ~/project/
      - restore_cache:
          keys:
            - chess-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: chess-dependencies-{{ checksum "package.json" }}
      - run: npm test
  auth-test:
    docker:
      - image: circleci/node:8.11.1
    working_directory: ~/project/3/auth/auth
    steps: 
      - checkout:
          path: ~/project/
      - restore_cache:
          keys:
            - auth-dependencies-{{ checksum "package.json" }}
      - run: npm install
      - save_cache:
          paths:
            - node_modules
          key: auth-dependencies-{{ checksum "package.json" }}
      - run: npm test
  push-gcr:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/project/3/api/api
    steps: 
      - checkout:
          path: ~/project/
      - run:
          name: Store Service Account
          command: |
            base64 --decode $GCLOUD_STORAGE > ${HOME}/gcloud-service-key.json
      - run: |
          gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
          gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
          gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
          gcloud auth configure-docker
      - setup_remote_docker
      - run:
        name: Docker push
        command: |
          docker build -t gcr.io/fauxpassproj-dev/api-test .
          docker push gcr.io/fauxpassproj-dev/api-test

#CircleCI uses an OR operator on filters
#In order to only build on tagged releases we need to ignore all branches
#OR filter by tag... feels hacky
workflows:
  version: 2
  build-and-test:
    jobs:
      - api-test
      - push-gcr